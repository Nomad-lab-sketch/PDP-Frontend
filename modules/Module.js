// Так как модули поддерживают ряд специальных ключевых слов, 
// и у них есть ряд особенностей, то необходимо явно сказать браузеру, 
// что скрипт является модулем, при помощи атрибута 
{/* <script type="module">. */ }

<script type="module">
	import {sayHi} from './say.js';

	document.body.innerHTML = sayHi('John');
</script>

// Браузер автоматически загрузит и запустит импортированный модуль 
// (и те, которые он импортирует, если надо), а затем запустит скрипт.

// ─── Основные Возможности Модулей ────────────────────────────────────────────

// Всегда «use strict»
// В модулях всегда используется режим use strict. 
// Например, присваивание к необъявленной переменной вызовет ошибку.

//  <script type="module">
//   a = 5;
// </script> 

// ─── Своя Область Видимости Переменных ───────────────────────────────────────

// Каждый модуль имеет свою собственную область видимости. 
// Другими словами, переменные и функции, объявленные в модуле, не видны в других скриптах.


// Код В Модуле Выполняется Только Один Раз При Импорт


// import.meta
// Объект import.meta содержит информацию о текущем модуле.

{/* <script type="module">
  console.log(import.meta.url); // ссылка на html страницу для встроенного скрипта
</script> */}


// В модуле «this» не определён
// Это незначительная особенность, но для полноты картины нам нужно упомянуть об этом.

// В модуле на верхнем уровне this не определён (undefined).

{/* <script>
  alert(this); // window
</script>

<script type="module">
  alert(this); // undefined
</script> */}



// ─── Commonjs ────────────────────────────────────────────────────────────────

// CommonJS - это стандарт, который используется в Node.js. 
// Он предполагает, что каждый файл является отдельным модулем, 
// который может экспортировать свои функции и переменные с помощью объекта module.exports. 
// Другие модули могут импортировать функции и переменные из модуля с помощью функции require.

// ─── Es ──────────────────────────────────────────────────────────────────────

// ES модули - это стандарт, который появился в ECMAScript 6. 
// Он предполагает использование ключевых слов import и export 
// для экспорта и импорта функций и переменных из модулей. 
// Каждый файл также является отдельным модулем, который может экспортировать 
// свои функции и переменные.


// Оба стандарта позволяют организовать код в модули, что упрощает его поддержку и разработку. 
// При этом, ES модули имеют ряд преимуществ перед CommonJS, таких как поддержка статического 
// анализа кода и возможность импортировать только необходимые функции и переменные из модуля.