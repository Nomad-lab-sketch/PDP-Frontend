// ─── Map ─────────────────────────────────────────────────────────────────────

// Map – это коллекция ключ/значение, как и Object. Но основное отличие в том, что Map позволяет использовать ключи любого типа.
let map = new Map();

map.set("1", "str1");    // строка в качестве ключа
map.set(1, "num1");      // цифра как ключ
map.set(true, "bool1");  // булево значение как ключ

// Map сохраняет тип ключей, так что в этом случае сохранится 2 разных значения:
// console.log(map.get(1)); // "num1"
// console.log(map.get("1")); // "str1"


// Map может использовать объекты в качестве ключей.
let johnMap = { name: "John" };

let visitsCountMap = new Map();
// объект john - это ключ для значения в объекте Map
visitsCountMap.set(john, 123);

// console.log(visitsCountMap.get(john)); // 123

// Для перебора коллекции Map есть 3 метода: 

// map.keys() – возвращает итерируемый объект по ключам,
// map.values() – возвращает итерируемый объект по значениям,
// map.entries() – возвращает итерируемый объект по парам вида [ключ, значение]

// Кроме этого, Map имеет встроенный метод forEach
// выполняем функцию для каждой пары (ключ, значение)
map.forEach((value, key, map) => {
	alert(`${key}: ${value}`);
});

// Таким образом можно получить все пары ключ/значения
let obj = Object.fromEntries(map);

// ─── Set ─────────────────────────────────────────────────────────────────────

// Set – это особый вид коллекции: «множество» значений (без ключей), где каждое значение может появляться только один раз.

let set = new Set();

let johnSet = { name: "John" };
let peteSet = { name: "Pete" };
let marySet = { name: "Mary" };

// считаем гостей, некоторые приходят несколько раз
set.add(johnSet);
set.add(peteSet);
set.add(marySet);
set.add(johnSet);
set.add(marySet);

for (let user of set) {
	// console.log(user.name); // John (потом Pete и Mary)
}

// Set имеет те же встроенные методы, что и Map:

// set.keys() – возвращает перебираемый объект для значений,
// set.values() – то же самое, что и set.keys(), присутствует для обратной совместимости с Map,
// set.entries() – возвращает перебираемый объект для пар вида [значение, значение], присутствует для обратной совместимости с Map.