// В современных сайтах скрипты обычно «тяжелее», чем HTML: они весят больше, дольше обрабатываются.

// Когда браузер загружает HTML и доходит до тега <script>...</script>, он не может продолжать строить DOM. 
// Он должен сначала выполнить скрипт. То же самое происходит и с внешними скриптами <script src="..."></script>: 
// браузер должен подождать, пока загрузится скрипт, выполнить его, и только затем обработать остальную страницу.


// ─── Defer ───────────────────────────────────────────────────────────────────

// Атрибут defer сообщает браузеру, что он должен продолжать обрабатывать страницу и загружать скрипт 
// в фоновом режиме, а затем запустить этот скрипт, когда DOM дерево будет полностью построено.

<script defer src="https://javascript.info/article/script-async-defer/long.js?speed=1"></script>

// Скрипты с defer никогда не блокируют страницу.
// Скрипты с defer всегда выполняются, когда дерево DOM готово, но до события DOMContentLoaded.

// Отложенные с помощью defer скрипты сохраняют порядок относительно друг друга, как и обычные скрипты.


// ─── Async ───────────────────────────────────────────────────────────────────

// Атрибут async означает, что скрипт абсолютно независим:

// Страница не ждёт асинхронных скриптов, содержимое обрабатывается и отображается.

// Событие DOMContentLoaded и асинхронные скрипты не ждут друг друга:
// DOMContentLoaded может произойти как до асинхронного скрипта (если асинхронный скрипт завершит 
// загрузку после того, как страница будет готова),
// …так и после асинхронного скрипта (если он короткий или уже содержится в HTTP-кеше)

// Остальные скрипты не ждут async, и скрипты c async не ждут другие скрипты.

// Так что если у нас есть несколько скриптов с async, они могут выполняться в любом порядке. 
// То, что первое загрузится – запустится в первую очередь:

{/* <script async src="https://javascript.info/article/script-async-defer/long.js"></script>
<script async src="https://javascript.info/article/script-async-defer/small.js"></script> */}

// ─── Динамически Загружаемые Скрипты ─────────────────────────────────────────

let script = document.createElement('script');
script.src = "/article/script-async-defer/long.js";
document.body.append(script); // (*)

// Динамически загружаемые скрипты по умолчанию ведут себя как «async».

// Но мы можем убрать это поведение установив 
script.async = false;

