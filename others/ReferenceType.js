// Ссылочный тип – это внутренний тип языка.

// Чтение свойства, например, с точкой . в obj.method() возвращает не точное значение свойства, 
// а специальное значение «ссылочного типа», в котором хранится как значение свойства, так и объект, 
// из которого оно было взято.

// Это нужно для последующего вызова метода (), чтобы получить объект и установить для него this.

// Для всех остальных операций ссылочный тип автоматически становится значением свойства.

// Вся механика скрыта от наших глаз. Это имеет значение только в особых случаях, 
// например, когда метод динамически извлекается из объекта с использованием выражения.


let user = {
	name: "John",
	hi() { alert(this.name); }
};

// разделим получение метода объекта и его вызов в разных строках
let hi = user.hi;
hi(); // Ошибка, потому что значением this является undefined

// Здесь hi = user.hi сохраняет функцию в переменной, и далее в последней строке 
// она вызывается полностью сама по себе, без объекта, так что нет this.

// Для работы вызовов типа user.hi(), JavaScript использует трюк – точка '.' возвращает не саму функцию, 
// а специальное значение «ссылочного типа», называемого Reference Type.